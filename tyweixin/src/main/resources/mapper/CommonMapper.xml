<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gen.framework.common.dao.CommonMapper">

  	
  	
  	  	<!-- 

  	 CommonCountBean(
	  	 *String tablename ,//表名

	  	 Object condition, //自定义条件 1)HashMap类型 condition.put("字段名,条件符号(=,<,>,<=,>=,!=,like...)","参数值")，例：condition.put("id,=","123456")，不加符号默认是=
  	 																											condition.put("money,<",1000)
  	 																											condition.put("name,like","邓小%")
  	 													 2)实体类型 直接传实体对像，只是条件都是=，以及不为空的参数才会被作为条件
		CommonChildBean ... childConditions //子表条件 new CommonChildBean(String "子表表名",String "子表主键",String "所关联的主表外键",Object "自定义条件（格式跟上述一样）")
	)
  	 -->
  	<select id="selectCount"   parameterType="com.gen.framework.common.beans.CommonCountBean" resultType="java.lang.Long">

		SELECT COUNT(0) FROM 
		<choose>
		<when test="tablename.matches('(.* )(?i)(with[(]nolock[)])')">
			${tablename.replaceAll('(.* )(?i)(with[(]nolock[)])','$1 t1 $2')}
		</when>
		<otherwise>${tablename} t1</otherwise>
		</choose>
		<if test="null!=childConditions">
			<foreach collection="childConditions" item="child"  index="key" >
				inner join ${child.childTablename} ct${key} on ct${key}.${child.keyname}=t1.${child.foreignKeyname}
				<if test="null!=child.condition">
				<foreach collection="child.condition" item="cvalue" index="ckey" >
					<choose>
						<when test="ckey.matches('([a-zA-Z0-9]+)|(\\[[a-zA-Z0-9]+\\])')">
						and	 ct${key}.${ckey}=#{cvalue}
						</when>
						<otherwise>
						and	 ct${key}.${ckey.split(",")[0]} ${ckey.split(",")[1]} #{cvalue} 
						</otherwise>
					</choose>
					
				</foreach>
				</if>
			</foreach>
		</if>
		<if test="null!=condition">
		<where>
			<foreach collection="condition" item="value"  index="key"  >   
		      	<choose>
		      	
				<when test="key.matches('([a-zA-Z0-9]+)|(\\[[a-zA-Z0-9]+\\])') and !key.matches('and.*') and !key.matches('or.*')">
					<if test="auto">
					and 
					</if>
					t1.${key} = #{value} 
				</when>
				<otherwise>
				<choose>
					<when test="key.indexOf('(')>-1 or key.indexOf(')')>-1 or key.matches('[)] or [(]') or key.matches('or.*') or key.matches('and.*')">
						${key}
					</when>
					<otherwise>
					<if test="auto">
					and 
					</if>
					t1.${key.split(",")[0]} ${key.split(",")[1]} #{value} 
					</otherwise>
				</choose>
				
					
				</otherwise>
			</choose>
			</foreach>
		</where>
		</if>
  	</select>
  	
  	  	<!-- 

  	 CommonSearchBean(
	  	 *String tablename ,//表名
	  	 String ordername, //字段排序
	  	 String custom, //自定义返回属性
	  	 Object condition, //自定义条件 1)HashMap类型 condition.put("字段名,条件符号(=,<,>,<=,>=,!=,like...)","参数值")，例：condition.put("id,=","123456")，不加符号默认是=
  	 																											condition.put("money,<",1000)
  	 																											condition.put("name,like","邓小%")
  	 													 2)实体类型 直接传实体对像，只是条件都是=，以及不为空的参数才会被作为条件
		CommonChildBean ... childConditions //子表条件 new CommonChildBean(String "子表表名",String "子表主键",String "所关联的主表外键",Object "自定义条件（格式跟上述一样）")
	)
  	 -->
  	<select id="selectObjects"   parameterType="com.gen.framework.common.beans.CommonSearchBean"  resultType="java.util.HashMap" >

		SELECT 
		<choose>
			<when test="null!=custom">
				${custom}
			</when>
			<otherwise>* </otherwise>
		</choose>
		FROM 
		<choose>
		<when test="tablename.matches('(.* )(?i)(with[(]nolock[)])')">
			${tablename.replaceAll('(.* )(?i)(with[(]nolock[)])','$1 t1 $2')}
		</when>
		<otherwise>${tablename} t1 </otherwise>
		</choose> 
		<if test="null!=childConditions">
			<foreach collection="childConditions" item="child"  index="key" >
				inner join ${child.childTablename} ct${key} on ct${key}.${child.keyname}=t1.${child.foreignKeyname}
				<if test="null!=child.condition">
				<foreach collection="child.condition" item="cvalue" index="ckey" >
					<choose>
						<when test="ckey.matches('([a-zA-Z0-9]+)|(\\[[a-zA-Z0-9]+\\])')">
							and ct${key}.${ckey}=#{cvalue}
						</when>
						<otherwise>
							and  ct${key}.${ckey.split(",")[0]} ${ckey.split(",")[1]} #{cvalue} 
						</otherwise>
					</choose>
					
				</foreach>
				</if>
			</foreach>
		</if>
		<if test="null!=condition">
		<where>
			<foreach collection="condition" item="value"  index="key"   >   
		      	<choose>
		      	
				<when test="key.matches('([a-zA-Z0-9]+)|(\\[[a-zA-Z0-9]+\\])') and !key.matches('and.*') and !key.matches('or.*')">
					<if test="auto">
					and 
					</if>
					t1.${key} = #{value} 
				</when>
				<otherwise>
				<choose>
					<when test="key.indexOf('(')>-1 or key.indexOf(')')>-1 or key.matches('[)] or [(]') or key.matches('or.*') or key.matches('and.*')">
						${key}
					</when>
					<otherwise>
					<if test="auto">
					and 
					</if>
					t1.${key.split(",")[0]} ${key.split(",")[1]} #{value} 
					</otherwise>
				</choose>
				
					
				</otherwise>
			</choose>
			</foreach>
		</where>
		</if>
		<if test="null!=ordername">
			ORDER BY ${ordername} 
		</if>
		<if test="null!=startNum and null!=endNum" >
			limit #{startNum },#{endNum}
		</if>
  	</select>
  	<insert id="insertObject" useGeneratedKeys="true" keyProperty="id" parameterType="com.gen.framework.common.beans.CommonInsertBean">
  			insert into ${tablename} 
  			<foreach collection="params" item="value"  index="key" open="(" close=")" separator=",">
  				${key}
  			</foreach>
  			
  			<foreach collection="params" item="value"  index="key" open=" values (" close=")" separator=",">
  				#{value}
  			</foreach>
  	</insert>
  	<update id="updateObject" parameterType="com.gen.framework.common.beans.CommonUpdateBean">
  		update ${tablename} 
  		  	<foreach collection="params" item="value"  index="key" open="set " separator=",">
  				${key}=#{value}
  			</foreach>
  		  	<foreach collection="condition" item="value"  index="key" open="where" separator="and">
  				${key}=#{value}
  			</foreach>
  	</update>
</mapper>